name: CI/CD Pipeline

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: creative-print-backend

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Make Maven wrapper executable
        run: |
          cd CreativePrint_backend
          chmod +x ./mvnw

      - name: Build Backend
        run: |
          cd CreativePrint_backend
          ./mvnw clean package -DskipTests

      - name: Create Dockerfile
        run: |
          cat > CreativePrint_backend/Dockerfile << 'ENDOFFILE'
          FROM eclipse-temurin:21-jdk-alpine as build
          WORKDIR /workspace/app

          COPY mvnw .
          COPY .mvn .mvn
          COPY pom.xml .
          COPY src src
          COPY target/*.jar app.jar

          FROM eclipse-temurin:21-jre-alpine
          VOLUME /tmp
          COPY --from=build /workspace/app/app.jar app.jar
          ENTRYPOINT ["java","-jar","/app.jar"]
          ENDOFFILE

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          # Get Docker username 
          DOCKER_USER="${{ secrets.DOCKER_USERNAME }}"
          
          # Build Docker image
          docker build -t ${DOCKER_USER}/${IMAGE_NAME}:latest -t ${DOCKER_USER}/${IMAGE_NAME}:${{ github.sha }} ./CreativePrint_backend
          
          # Push Docker images
          docker push ${DOCKER_USER}/${IMAGE_NAME}:latest
          docker push ${DOCKER_USER}/${IMAGE_NAME}:${{ github.sha }}